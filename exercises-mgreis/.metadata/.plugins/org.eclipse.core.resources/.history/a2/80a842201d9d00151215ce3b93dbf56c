package loadxml;


import java.io.StringReader;
import java.nio.charset.StandardCharsets;

import javax.naming.NamingException;
import javax.xml.transform.stream.StreamSource;

/**
 * Receives XML messages from the WebCrawler topic and receives search requests
 * from the PriceKeeper queue.
 *
 * The xml data received from the WebCrawler is kept as is in memory. The search
 * requests get a filtered version of the xml or an empty body if I don't have
 * data yet.
 *
 * The program does not stop.
 *
 * The user should have the permissions <code>createDurableQueue</code> and
 * <code>deleteDurableQueue</code>.
 *
 * @author mgreis
 */
public class PriceKeeper implements Runnable {

   

    // data
    private volatile String data;

    public PriceKeeper() {
    }

    @Override
    public void run() {

       
            // receive data from topic
            while (true) {
                final byte[] xml;
                try {
                    xml = receive();
                    String array = new String(xml, StandardCharsets.UTF_8);
                } catch (Exception ex) {
                    System.out.println("ERROR: Failed to receive data from file.");
                
                    continue; // try again
                }

                // validate message
                // @xxx doesn't check timestamp
                try {
                    XmlHelper.validate(new StreamSource(new StringReader(xml)));
                } catch (Exception ex) {
                    System.out.println("ERROR: Failed to validate.");
                    Debug.printStackTrace(ex);
                    continue; // try again
                }

                // replace data
                this.data = xml;
            }
        }
    }

   

    private byte[] receive() throws Exception {
        byte[] array=null; 
        return array;
        	
    }

    /**
     * Starting point of the console app.
     *
     * @param args ignored.
     * @throws Exception if anything bad happens
     */
    public static void main(String[] args) throws Exception {
        final PriceKeeper app = new PriceKeeper();
        app.run();
    }

}
